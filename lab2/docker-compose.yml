version: '3.8'

services:
  mongodb1:
    image: mongo:7.0.5
    container_name: mongodb1
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    volumes:
      - mongodb1_data:/data/db
      - mongodb1_config:/data/configdb
    ports:
      - "27017:27017"
    networks:
      - mongo-network

  mongodb2:
    image: mongo:7.0.5
    container_name: mongodb2
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    volumes:
      - mongodb2_data:/data/db
      - mongodb2_config:/data/configdb
    ports:
      - "27018:27018"
    networks:
      - mongo-network

  mongodb3:
    image: mongo:7.0.5
    container_name: mongodb3
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    volumes:
      - mongodb3_data:/data/db
      - mongodb3_config:/data/configdb
    ports:
      - "27019:27019"
    networks:
      - mongo-network

  spring-app:
    image: maven:3.8.5-openjdk-17
    working_dir: /app
    volumes:
      - ./lab2:/app
    ports:
      - "8080:8080"
    command: /bin/bash
    stdin_open: true
    tty: true
    networks:
      - mongo-network

volumes:
  mongodb1_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data_volume/mongodb1/db
  mongodb1_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data_volume/mongodb1/configdb
  mongodb2_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data_volume/mongodb2/db
  mongodb2_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data_volume/mongodb2/configdb
  mongodb3_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data_volume/mongodb3/db
  mongodb3_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data_volume/mongodb3/configdb

networks:
  mongo-network:
    driver: bridge

#docker compose up -d
#docker compose exec spring-app /bin/bash
#mvn spring-boot:run